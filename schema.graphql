"City where a superhero is located or operates"
type City {
  "The name of the city"
  name: String
  superheroes: [Superhero]
  "A short abbreviation or symbolic representation of the city"
  symbol: String
}

"Mutation root"
type Mutation {
  createSuperhero(superhero: SuperheroInput): Superhero
}

"Query root"
type Query {
  "Get all cities."
  allCities: [City]
  "Get all superheroes."
  allSuperheroes: [Superhero]
  "Get a City."
  city(cityId: Int!): City
  "Get a super hero."
  superhero(heroId: Int!): Superhero
}

"Representation of a Superhero"
type Superhero {
  "The city where the superhero is based or operates"
  city: City
  "The gender of the superhero"
  gender: Gender
  "The name of the superhero"
  name: String
}

"Gender of a superhero"
enum Gender {
  "Female"
  FEMALE
  "Male"
  MALE
  "Not applicable or unknown"
  NOT_APPLICABLE
}

"City where a superhero is located or operates"
input CityInput {
  "The name of the city"
  name: String
  "A short abbreviation or symbolic representation of the city"
  symbol: String
}

"Representation of a Superhero"
input SuperheroInput {
  "The city where the superhero is based or operates"
  city: CityInput
  "The gender of the superhero"
  gender: Gender
  "The name of the superhero"
  name: String
}
